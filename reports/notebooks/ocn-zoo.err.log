Traceback (most recent call last):
  File "/home/runner/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/runner/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/runner/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/home/runner/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/asyncio/base_events.py", line 719, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/runner/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/runner/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
copepod_obs_path = 's3://pythia/ocean-bgc/obs/copepod-2012__cmass-m00-qtr.zarr'

copepod_obs = s3fs.S3Map(root=copepod_obs_path, s3=s3)

ds_copepod = xr.open_dataset(copepod_obs, engine="zarr")

### converting grams to moles
ds_copepod['copepod_C']=ds_copepod.copepod_C/12.011
------------------


[31m---------------------------------------------------------------------------[39m
[31mTypeError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[10][39m[32m, line 5[39m
[32m      1[39m copepod_obs_path = [33m'[39m[33ms3://pythia/ocean-bgc/obs/copepod-2012__cmass-m00-qtr.zarr[39m[33m'[39m
[32m      3[39m copepod_obs = s3fs.S3Map(root=copepod_obs_path, s3=s3)
[32m----> [39m[32m5[39m ds_copepod = [43mxr[49m[43m.[49m[43mopen_dataset[49m[43m([49m[43mcopepod_obs[49m[43m,[49m[43m [49m[43mengine[49m[43m=[49m[33;43m"[39;49m[33;43mzarr[39;49m[33;43m"[39;49m[43m)[49m
[32m      7[39m [38;5;66;03m### converting grams to moles[39;00m
[32m      8[39m ds_copepod[[33m'[39m[33mcopepod_C[39m[33m'[39m]=ds_copepod.copepod_C/[32m12.011[39m

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/xarray/backends/api.py:687[39m, in [36mopen_dataset[39m[34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)[39m
[32m    675[39m decoders = _resolve_decoders_kwargs(
[32m    676[39m     decode_cf,
[32m    677[39m     open_backend_dataset_parameters=backend.open_dataset_parameters,
[32m   (...)[39m[32m    683[39m     decode_coords=decode_coords,
[32m    684[39m )
[32m    686[39m overwrite_encoded_chunks = kwargs.pop([33m"[39m[33moverwrite_encoded_chunks[39m[33m"[39m, [38;5;28;01mNone[39;00m)
[32m--> [39m[32m687[39m backend_ds = [43mbackend[49m[43m.[49m[43mopen_dataset[49m[43m([49m
[32m    688[39m [43m    [49m[43mfilename_or_obj[49m[43m,[49m
[32m    689[39m [43m    [49m[43mdrop_variables[49m[43m=[49m[43mdrop_variables[49m[43m,[49m
[32m    690[39m [43m    [49m[43m*[49m[43m*[49m[43mdecoders[49m[43m,[49m
[32m    691[39m [43m    [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m,[49m
[32m    692[39m [43m[49m[43m)[49m
[32m    693[39m ds = _dataset_from_backend_dataset(
[32m    694[39m     backend_ds,
[32m    695[39m     filename_or_obj,
[32m   (...)[39m[32m    705[39m     **kwargs,
[32m    706[39m )
[32m    707[39m [38;5;28;01mreturn[39;00m ds

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/xarray/backends/zarr.py:1608[39m, in [36mZarrBackendEntrypoint.open_dataset[39m[34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, group, mode, synchronizer, consolidated, chunk_store, storage_options, zarr_version, zarr_format, store, engine, use_zarr_fill_value_as_mask, cache_members)[39m
[32m   1606[39m filename_or_obj = _normalize_path(filename_or_obj)
[32m   1607[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m store:
[32m-> [39m[32m1608[39m     store = [43mZarrStore[49m[43m.[49m[43mopen_group[49m[43m([49m
[32m   1609[39m [43m        [49m[43mfilename_or_obj[49m[43m,[49m
[32m   1610[39m [43m        [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m
[32m   1611[39m [43m        [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m   1612[39m [43m        [49m[43msynchronizer[49m[43m=[49m[43msynchronizer[49m[43m,[49m
[32m   1613[39m [43m        [49m[43mconsolidated[49m[43m=[49m[43mconsolidated[49m[43m,[49m
[32m   1614[39m [43m        [49m[43mconsolidate_on_close[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[32m   1615[39m [43m        [49m[43mchunk_store[49m[43m=[49m[43mchunk_store[49m[43m,[49m
[32m   1616[39m [43m        [49m[43mstorage_options[49m[43m=[49m[43mstorage_options[49m[43m,[49m
[32m   1617[39m [43m        [49m[43mzarr_version[49m[43m=[49m[43mzarr_version[49m[43m,[49m
[32m   1618[39m [43m        [49m[43muse_zarr_fill_value_as_mask[49m[43m=[49m[38;5;28;43;01mNone[39;49;00m[43m,[49m
[32m   1619[39m [43m        [49m[43mzarr_format[49m[43m=[49m[43mzarr_format[49m[43m,[49m
[32m   1620[39m [43m        [49m[43mcache_members[49m[43m=[49m[43mcache_members[49m[43m,[49m
[32m   1621[39m [43m    [49m[43m)[49m
[32m   1623[39m store_entrypoint = StoreBackendEntrypoint()
[32m   1624[39m [38;5;28;01mwith[39;00m close_on_error(store):

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/xarray/backends/zarr.py:732[39m, in [36mZarrStore.open_group[39m[34m(cls, store, mode, synchronizer, group, consolidated, consolidate_on_close, chunk_store, storage_options, append_dim, write_region, safe_chunks, zarr_version, zarr_format, use_zarr_fill_value_as_mask, write_empty, cache_members)[39m
[32m    707[39m [38;5;129m@classmethod[39m
[32m    708[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mopen_group[39m(
[32m    709[39m     [38;5;28mcls[39m,
[32m   (...)[39m[32m    725[39m     cache_members: [38;5;28mbool[39m = [38;5;28;01mTrue[39;00m,
[32m    726[39m ):
[32m    727[39m     (
[32m    728[39m         zarr_group,
[32m    729[39m         consolidate_on_close,
[32m    730[39m         close_store_on_close,
[32m    731[39m         use_zarr_fill_value_as_mask,
[32m--> [39m[32m732[39m     ) = [43m_get_open_params[49m[43m([49m
[32m    733[39m [43m        [49m[43mstore[49m[43m=[49m[43mstore[49m[43m,[49m
[32m    734[39m [43m        [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m    735[39m [43m        [49m[43msynchronizer[49m[43m=[49m[43msynchronizer[49m[43m,[49m
[32m    736[39m [43m        [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m
[32m    737[39m [43m        [49m[43mconsolidated[49m[43m=[49m[43mconsolidated[49m[43m,[49m
[32m    738[39m [43m        [49m[43mconsolidate_on_close[49m[43m=[49m[43mconsolidate_on_close[49m[43m,[49m
[32m    739[39m [43m        [49m[43mchunk_store[49m[43m=[49m[43mchunk_store[49m[43m,[49m
[32m    740[39m [43m        [49m[43mstorage_options[49m[43m=[49m[43mstorage_options[49m[43m,[49m
[32m    741[39m [43m        [49m[43mzarr_version[49m[43m=[49m[43mzarr_version[49m[43m,[49m
[32m    742[39m [43m        [49m[43muse_zarr_fill_value_as_mask[49m[43m=[49m[43muse_zarr_fill_value_as_mask[49m[43m,[49m
[32m    743[39m [43m        [49m[43mzarr_format[49m[43m=[49m[43mzarr_format[49m[43m,[49m
[32m    744[39m [43m    [49m[43m)[49m
[32m    746[39m     [38;5;28;01mreturn[39;00m [38;5;28mcls[39m(
[32m    747[39m         zarr_group,
[32m    748[39m         mode,
[32m   (...)[39m[32m    756[39m         cache_members,
[32m    757[39m     )

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/xarray/backends/zarr.py:1811[39m, in [36m_get_open_params[39m[34m(store, mode, synchronizer, group, consolidated, consolidate_on_close, chunk_store, storage_options, zarr_version, use_zarr_fill_value_as_mask, zarr_format)[39m
[32m   1808[39m [38;5;28;01melif[39;00m consolidated [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m   1809[39m     [38;5;66;03m# same but with more error handling in case no consolidated metadata found[39;00m
[32m   1810[39m     [38;5;28;01mtry[39;00m:
[32m-> [39m[32m1811[39m         zarr_root_group = [43mzarr[49m[43m.[49m[43mopen_consolidated[49m[43m([49m[43mstore[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mopen_kwargs[49m[43m)[49m
[32m   1812[39m     [38;5;28;01mexcept[39;00m ([38;5;167;01mValueError[39;00m, [38;5;167;01mKeyError[39;00m):
[32m   1813[39m         [38;5;66;03m# ValueError in zarr-python 3.x, KeyError in 2.x.[39;00m
[32m   1814[39m         [38;5;28;01mtry[39;00m:

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/zarr/api/synchronous.py:217[39m, in [36mopen_consolidated[39m[34m(use_consolidated, *args, **kwargs)[39m
[32m    212[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mopen_consolidated[39m(*args: Any, use_consolidated: Literal[[38;5;28;01mTrue[39;00m] = [38;5;28;01mTrue[39;00m, **kwargs: Any) -> Group:
[32m    213[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m    214[39m [33;03m    Alias for :func:`open_group` with ``use_consolidated=True``.[39;00m
[32m    215[39m [33;03m    """[39;00m
[32m    216[39m     [38;5;28;01mreturn[39;00m Group(
[32m--> [39m[32m217[39m         [43msync[49m[43m([49m[43masync_api[49m[43m.[49m[43mopen_consolidated[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43muse_consolidated[49m[43m=[49m[43muse_consolidated[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m[43m)[49m
[32m    218[39m     )

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/zarr/core/sync.py:163[39m, in [36msync[39m[34m(coro, loop, timeout)[39m
[32m    160[39m return_result = [38;5;28mnext[39m([38;5;28miter[39m(finished)).result()
[32m    162[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(return_result, [38;5;167;01mBaseException[39;00m):
[32m--> [39m[32m163[39m     [38;5;28;01mraise[39;00m return_result
[32m    164[39m [38;5;28;01melse[39;00m:
[32m    165[39m     [38;5;28;01mreturn[39;00m return_result

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/zarr/core/sync.py:119[39m, in [36m_runner[39m[34m(coro)[39m
[32m    114[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    115[39m [33;03mAwait a coroutine and return the result of running it. If awaiting the coroutine raises an[39;00m
[32m    116[39m [33;03mexception, the exception will be returned.[39;00m
[32m    117[39m [33;03m"""[39;00m
[32m    118[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m119[39m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m coro
[32m    120[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m ex:
[32m    121[39m     [38;5;28;01mreturn[39;00m ex

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/zarr/api/asynchronous.py:362[39m, in [36mopen_consolidated[39m[34m(use_consolidated, *args, **kwargs)[39m
[32m    357[39m [38;5;28;01mif[39;00m use_consolidated [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mTrue[39;00m:
[32m    358[39m     [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m(
[32m    359[39m         [33m"[39m[33m'[39m[33muse_consolidated[39m[33m'[39m[33m must be [39m[33m'[39m[33mTrue[39m[33m'[39m[33m in [39m[33m'[39m[33mopen_consolidated[39m[33m'[39m[33m. Use [39m[33m'[39m[33mopen[39m[33m'[39m[33m with [39m[33m"[39m
[32m    360[39m         [33m"[39m[33m'[39m[33muse_consolidated=False[39m[33m'[39m[33m to bypass consolidated metadata.[39m[33m"[39m
[32m    361[39m     )
[32m--> [39m[32m362[39m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m open_group(*args, use_consolidated=use_consolidated, **kwargs)

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/zarr/api/asynchronous.py:819[39m, in [36mopen_group[39m[34m(store, mode, cache_attrs, synchronizer, path, chunk_store, storage_options, zarr_version, zarr_format, meta_array, attributes, use_consolidated)[39m
[32m    816[39m [38;5;28;01mif[39;00m chunk_store [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    817[39m     warnings.warn([33m"[39m[33mchunk_store is not yet implemented[39m[33m"[39m, [38;5;167;01mRuntimeWarning[39;00m, stacklevel=[32m2[39m)
[32m--> [39m[32m819[39m store_path = [38;5;28;01mawait[39;00m make_store_path(store, mode=mode, storage_options=storage_options, path=path)
[32m    820[39m [38;5;28;01mif[39;00m attributes [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m    821[39m     attributes = {}

[36mFile [39m[32m~/miniconda3/envs/ocean-bgc-cookbook-dev/lib/python3.13/site-packages/zarr/storage/_common.py:316[39m, in [36mmake_store_path[39m[34m(store_like, path, mode, storage_options)[39m
[32m    314[39m     [38;5;28;01melse[39;00m:
[32m    315[39m         msg = [33mf[39m[33m"[39m[33mUnsupported type for store_like: [39m[33m'[39m[38;5;132;01m{[39;00m[38;5;28mtype[39m(store_like).[34m__name__[39m[38;5;132;01m}[39;00m[33m'[39m[33m"[39m  [38;5;66;03m# type: ignore[unreachable][39;00m
[32m--> [39m[32m316[39m         [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m(msg)
[32m    318[39m     result = [38;5;28;01mawait[39;00m StorePath.open(store, path=path_normalized, mode=mode)
[32m    320[39m [38;5;28;01mif[39;00m storage_options [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m used_storage_options:

[31mTypeError[39m: Unsupported type for store_like: 'FSMap'

